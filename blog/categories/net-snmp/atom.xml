<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: net-snmp | Rollstone]]></title>
  <link href="http://merlinli.github.com/blog/categories/net-snmp/atom.xml" rel="self"/>
  <link href="http://merlinli.github.com/"/>
  <updated>2016-01-09T16:23:51+08:00</updated>
  <id>http://merlinli.github.com/</id>
  <author>
    <name><![CDATA[Merlin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[用net-snmp监控特定的网卡]]></title>
    <link href="http://merlinli.github.com/blog/2013/09/24/snmp-monitor-special-interface/"/>
    <updated>2013-09-24T17:15:00+08:00</updated>
    <id>http://merlinli.github.com/blog/2013/09/24/snmp-monitor-special-interface</id>
    <content type="html"><![CDATA[<p>net-snmp的监控网卡的默认配置是监控所有的网卡，所以有些你不用的网卡仍然会发送trap，这会给你造成困扰<br />
默认配置： <br />
如果配置文件里是   </p>

<pre><code>linkUpDownNotifications yes
</code></pre>

<p>等效于下面的配置	</p>

<pre><code>notificationEvent  linkUpTrap    linkUp   ifIndex ifAdminStatus ifOperStatus  
notificationEvent  linkDownTrap  linkDown ifIndex ifAdminStatus ifOperStatus  

monitor  -u cjslyxz -r 600 -e linkUpTrap   "Generate linkUp" ifOperStatus != 2
monitor  -u cjslyxz -r 600 -e linkDownTrap "Generate linkDown" ifOperStatus == 2
</code></pre>

<p>这个是监控所有的网卡的，即使那个网卡被你用“ifconfig”之类的命令disable掉了，它仍然会发送trap.<br />
可惜net-snmp不支持”ifOperStatus == 2 And ifAdminStatus ！= 2 ”这样的表达式。<br />
但是我们仍然有两种解决方案。<br />
##方案一
修改配置如下</p>

<pre><code>notificationEvent  eth0_linkUpTrap    linkUp   ifIndex.2 ifAdminStatus.2 ifOperStatus.2 ifName.2 ifDescr.2
notificationEvent  eth0_linkDownTrap  linkDown ifIndex.2 ifAdminStatus.2 ifOperStatus.2 ifName.2 ifDescr.2

monitor -u cjslyxz -t -r 600 -e eth0_linkUpTrap   "eth0 linkUp"  -I ifOperStatus.2 != 2
monitor -u cjslyxz -t -r 600 -e eth0_linkDownTrap "eth0 linkDown"  -I ifOperStatus.2 == 2
</code></pre>

<p>我们显式使用 “-I”选项表示OID是精确匹配的，那我们是怎样知道这个OID是关联哪个网卡的呢？<br />
用命令 </p>

<pre><code>snmpwalk -v 2c localhost ifDescr

.1.3.6.1.2.1.2.2.1.2.1 = STRING: lo
.1.3.6.1.2.1.2.2.1.2.2 = STRING: eth0
.1.3.6.1.2.1.2.2.1.2.4 = STRING: eth1 IfOperStatus和ifDescr都是ifEntry的成员，每个ifEntry对应一个interface(网卡)，所以ifOperStaus.2肯定就是eth0的operrate状态。所以上面的配置就是只关心eth0的状态，只要eth0网线断了就会发送trap.  
</code></pre>

<h2 id="section">方案二</h2>
<p>从驱动中把这个网卡禁用掉  </p>

<ul>
  <li>
    <p>显示你的驱动所能识别的网卡的名字  </p>

    <pre><code>  # ls -l /sys/bus/pci/drivers/bnx2 
  total 0
  lrwxrwxrwx 1 root root    0 Sep 24 11:34 0000:02:00.0 -&gt; ../../../../devices/pci0000:00/0000:00:1c.0/0000:02:00.0
  lrwxrwxrwx 1 root root    0 Sep 24 11:34 0000:02:00.1 -&gt; ../../../../devices/pci0000:00/0000:00:1c.0/0000:02:00.1
  # ls -Ll /sys/bus/pci/drivers/bnx2/0000:02:00.0/net
  total 0
  drwxr-xr-x 4 root root 0 Sep 24 11:34 eth0
</code></pre>
  </li>
</ul>

<p>从上面的输出可以看到”0000:02:00.0“ 是和 “eth0“相对应的。</p>

<ul>
  <li>
    <p>从驱动中禁用这个网卡</p>

    <pre><code>  echo "0000:02:00.0"" &gt;/sys/bus/pci/drivers/bnx2/unbind
</code></pre>
  </li>
</ul>

<p>如果机器重启的话，这个网卡会被重新识别。如果想不重启再重新用这个网卡，用下面的命令：</p>

<pre><code>echo "0000:02:00.0"" &gt;/sys/bus/pci/drivers/bnx2/bind
</code></pre>

<p>其实如果你看net-snmp的代码，operstaus 和adminstatus的值都是从调用函数“ioctl”带着“SIOCGIFFLAGS”参数从驱<br />
动中获取的。如果设备是状态是“IFF_UP”那就设adminstatus=up, 如果是“IFF_RUNNING” 那就设operstaus=up,mib里<br />
描述的其他状态其实都没处理。  </p>

<p>代码：  </p>

<pre><code>if(ifentry-&gt;os_flags &amp; IFF_UP) {
        ifentry-&gt;admin_status = IFADMINSTATUS_UP;
        if(ifentry-&gt;os_flags &amp; IFF_RUNNING)
            ifentry-&gt;oper_status = IFOPERSTATUS_UP;
        else
            ifentry-&gt;oper_status = IFOPERSTATUS_DOWN;
    }
    else {
        ifentry-&gt;admin_status = IFADMINSTATUS_DOWN;
        ifentry-&gt;oper_status = IFOPERSTATUS_DOWN;
    }
</code></pre>

<p>“ifconfig down”命令只会清除“IFF_UP”标志位<br />
“ifconfig up”命令会设置“IFF_UP”标志位  </p>

<p>如果插上网线，可以发送接收数据包，则设置“IFF_RUNNING”标志位。</p>

<p>所以所有出现在ifconfig里的网卡“ifAdminStatus=up”，没插网线<br />
的网卡“ifOperStatus=down”.还有个规则就是如果“ifAdminStatus=down”<br />
则对应网卡的“ifOperStatus=down”。</p>

]]></content>
  </entry>
  
</feed>
